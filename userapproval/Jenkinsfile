def userId = currentBuild.getBuildCauses()[0].userId
def name
def repo

pipeline {

  agent any
  options{

    timeout(time: 30, unit: 'MINUTES')
    disableConcurrentBuilds()
  }

stages{
  stage('Source code fetech'){
steps{
git branch: 'main', url: 'https://github.com/Ravi-s10/Docker_image_creator.git'
}
  }

  stage('Read properties file')
  {
    steps{
    script{  prop = readProperties file: "userapproval/pipeline.properties" }
    }
  }

  stage('Provide approval'){

    steps{

echo "Deployment approval started"

      script {
try {

userInputDeployment = input id: 'ravi.sharma34',
  message: 'Procees with deployment?',
  parameters: [booleanParam(defaultValue: false, description: ' ', name: 'Deployment flag')],
  submitter: 'Ravi Sharma'
}
        catch(error){

          echo "${error}"
          echo "Approval failed"
        }

      }

echo "Deployment complete"



      
    }
  }

  
}
}
